// Time Complexity : worst case is O(n)
// Space Complexity : O(n)
// Did this code successfully run on Leetcode : yes
// Any problem you faced while coding this : no

// use a queue to insert elements level wise and poll them in order

class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();
        Queue<TreeNode> q = new LinkedList<>();
        if(root == null) {
            return result;
        }
        q.add(root);
        while(!q.isEmpty()) {
            List<Integer> temp = new ArrayList<>();
            int len = q.size();
            for(int i=0; i<len; i++) {
                TreeNode curr = q.poll();
                temp.add(curr.val);
                if(curr.left != null) {
                    q.add(curr.left);
                } 
                if(curr.right != null) {
                    q.add(curr.right);
                }
            }
            result.add(temp);
        }
        return result;
    }
}
